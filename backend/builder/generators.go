package builder

import (
	"path/filepath"
	"github.com/dave/jennifer/jen"
	"fmt"
)

type GeneratorContext struct {
	TargetDir string
	Model     *App
	GoFiles   []*GoFile
}

type GoFile struct {
	fname string
	*jen.File
}

func (ctx *GeneratorContext) NewGoFile(packageName string, path string) *GoFile {
	gf := jen.NewFile(packageName)
	fname := filepath.Join(ctx.TargetDir, path)
	f := &GoFile{fname, gf}
	ctx.GoFiles = append(ctx.GoFiles, f)
	return f
}

func (ctx *GeneratorContext) Emit() {
	for _, f := range ctx.GoFiles {
		fmt.Printf("%s\n", f.fname)
		fmt.Printf("// DO NOT EDIT. This file is generated by devdrasil plugin builder.\n")
		fmt.Printf("%#v\n", f.File)
	}
}

//A simple generator contract to create parts of the app
type Generator interface {
	//invokes the generator with the app and returns a potential error
	Generate(ctx *GeneratorContext) error
}
